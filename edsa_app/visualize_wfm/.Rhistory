c = c(5,3,1)
plot(a,b,c)
install.packages('plot3D')
library(plot3D)
plot3D(a,b,c)
persp3D(a,b,c)
persp3D (x = seq(0, 1, length.out = nrow(z)),
y = seq(0, 1, length.out = ncol(z)), z)
z = a + b
z
example(persp3D())
example(persp3D
)
a = data.frame('one' = 1, 'two' = 2)
a
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/select_project')
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv,
dbname = "edsa",
user   = "llschlit")''
con <- dbConnect(drv,
dbname = "edsa",
user   = "llschlit")
result <- dbGetQuery(con, "SELECT *
FROM data_set
WHERE ds_title = '0_imp_raw' AND exp_id = 1000;")
result''
result
result$exp_id
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
x <- data.frame('loc' => result$location, 'header' = result$header)
x <- data.frame('loc' = result$location, 'header' = result$header)
result
x <- data.frame('loc' = result$location, 'd_type' = result$d_type)
x
x$loc
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
x
paste(x)
print(x)
paste(print(x))
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
x
y <- get(x$loc)
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
foo
foo = data.frame('file' = '/tmp/electroporation_w_impedence/0_raw.csv', 'head' = 'TRUE', 'sep' = ',')
theData <- read.csv(file = foo$file, head = foo$head, sep = foo$sep)
foo$file
foo
toString(foo$file)
theData <- read.csv(file = toString(foo$file), head = foo$head, sep = foo$sep)
theData <- read.csv(file = toString(foo$file), head = foo$head, sep = toString(foo$sep))
theData <- read.csv(file = toString(foo$file), head = toString(foo$head), sep = toString(foo$sep))
theData <- read.csv(file = toString(foo$file), head = toBoolean(foo$head), sep = toString(foo$sep))
theData <- read.csv(file = toString(foo$file), head = toBool(foo$head), sep = toString(foo$sep))
t = "TRUE"
y <- as.logical(t)
y
theData <- read.csv(file = toString(foo$file), head = as.logical(foo$head), sep = toString(foo$sep))
theData
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/select_project')
shiny::runApp('edsa/edsa_app/visualize_data')
theData <- read.csv(file = toString(foo$file), head = as.logical(foo$head), sep = toString(foo$sep))
foo
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
test = data.frame('file' = toString(foo$file), 'head' = as.logical(foo$head), 'sep' = toString(foo$sep))
theData <- read.csv(test)
test = data.frame('file' = toString(foo$file), 'head' = as.logical(foo$head), 'sep' = toString(foo$sep))
theData <- read.csv(file=test$file, head=test$head, sep=test$sep)
s = foo$sep
s
s = toString(foo$sep)
s
sizeof(s)
sizeOf(s)
object.size(s)
shiny::runApp('edsa/edsa_app/visualize_data')
object.size(',')
s = ','
s
object.size(',')
',' == toString(foo$sep)
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
colnames(foo)
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
colnames(foo)
a = colnames(foo)
typeof(a)
a
a = c(a)
a
typeof(a)
shiny::runApp('edsa/edsa_app/visualize_data')
nrow(a)
a
l <- a
l <- list(a)
l
typeiof(l)
typeof(l)
shiny::runApp('edsa/edsa_app/visualize_data')
l <- array(colnames(foo))
l
typeof(l)
l <- c(do.call("cbind", l))
l <- list(colnames(ff))
l <- list(colnames(foo))
l <- c(do.call("cbind", l))
l
nrow(l)
count(l)
typeof(l)
shiny::runApp('edsa/edsa_app/visualize_data')
l
as.list(l)
shiny::runApp('edsa/edsa_app/visualize_data')
l.length
length(l)
shiny::runApp('edsa/edsa_app/visualize_data')
foo
theData
x <- seq(1:length(theData$V_0))
plot(x, theData$V_0)
plot(x, theData$V_0, type='l')
tset = "V_0"
plot(x, theData$tset, type='l')
plot(x, theData[tset], type='l')
theData[tset]
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
length(theData)
nrow(theData)
shiny::runApp('edsa/edsa_app/visualize_data')
nrow(theData) * 0.000001
x <- seq(from=0, to=(nrow(theData) * 0.000001))
x
x <- seq(from=0, to=(nrow(theData) * 0.000001), length.out=nrow(theData))
x
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/select_project')
test <- data.frame('hi' = 'there', 'you' = 'saquatch')
test[hi]
test$hi
test['hi']
test$hi
toString(test$hi)
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp('edsa/edsa_app/select_project')
s <- "volatage,volts,current,mA"
tmp <- strsplit(s, split=',')
tmp
final <- do.call(rbing, lapply(tmp, rbind))
final <- do.call(rbind, lapply(tmp, rbind))
final
length(tmp)
ncol(tmp)
nrow(tmp)
length(tmp[1])
length(tmp[[1]])
for(i in 1:length(tmp[[1]])) {
if(i % 2 == 0 ) {
l <- NULL
l <- c(l, 'hi')
l
l <- c(l, 'there')
l
l <- null
l <- NULL
col <- NULL
for(i in 1:length(tmp[[1]])) { if((i+2) % 2 != 0) { col <- c(col, tmp[[i]])}
tmp[[i]]
tmp[[1]]
tmp[1]
tmp[[1[1]]]
s
tmp <- as.data.frame(matrix(unlist(strsplit(s, ','))))
tmp
tmp[1]
tmp[1][1]
i = 'voltage'
tmp[i]
i = 'V1'
tmp[i]
colnames(tmp) <- 'test'
tmp
tmp$test[1]
tmp
tmp <- as.data.frame(matrix(unlist(strsplit(s, ','))))
colnames(tmp) <- 'unit'
tmp
cols <- NULL
dat <- NULL
cols <- c(cols, tmp$unit[1])
cols <- c(cols, tmp$unit[3])
dat <- c(dat, tmp$unit)
dat
dat <- NULL
dat <- c(dat, tmp$unit[2])
dat <- c(dat, tmp$unit[4])
dat
cols
tmp$unit[1]
toString(tmp$unit[1])
cols <- NULL
dat <- NULL
cols <- c(cols, toString(tmp$unit[1]))
cols <- c(cols, toString(tmp$unit[3]))
dat <- c(dat, toString(tmp$unit[2]))
dat <- c(dat, toString(tmp$unit[4]))
cols
dat
final <- as.data.frame(dat)
final
final <- NULL
final <- data.frame(col[1] = dat[1], col[2] = dat[2])
col[1]
cols
final <- data.frame(cols[1] = dat[1], cols[2] = dat[2])
cols[1]
assign(paste("x", cols[1], dat[1]))
f <- vector("list", length(cols))
f
names(f) <- cols
f
f[cols[1]]
f[cols[1]] <- toString(dat[2])
f
f[cols[2]] <- toString(dat[4])
f
dat
dat[2]
dat[1]
f[cols[1]] <- toString(dat[1])
f[cols[2]] <- toString(dat[2])
f
s = "voltage,volts,current,mA"
tmp <- as.data.frame(matrix(unlist(strsplit(s, ','))))
tmp
tmp <- unlist(strsplit(s,','))
tmp
length(tmp)
nFields = length(tmp)
nFields
tmp[1]
s = "voltage,volts,current,mA"
tmp <- unlist(strsplit(s,','))
nFields = length(tmp)
nFields = length(tmp) / 2
s = "voltage,volts,current,mA"
tmp <- unlist(strsplit(s,','))
nFields = length(tmp) / 2
cols <- NULL
dat <- NULL
for(i in 1:nFields) { if ((i+1)%2 != 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
for (i in 1:3) {print i}
for (i in 1:3) {print(i)
}
for(i in 1:nFields) {}
for(i in 1:nFields) {
print(i)}
for(i in 1:nFields) {
if ((i%1) == 0) { print("TRUE")}}
if ((1%1) == 0) { print("TRUE")}}
if ((1%1) == 0) {
if((1%1) == 0) {
if((1/1) == 0) {
print("TRUE")}
if((1-1) == 0) {
print("TRUE")}
1 % 3
1 %% 3
for(i in 1:nFields) { if ((i+1)%%2 != 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
cols
dat
nFields <- length(tmp)
for(i in 1:nFields) { if ((i+1)%%2 != 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
cols
cols <- NULL
dat <- NULL
for(i in 1:nFields) { if ((i+1)%%2 != 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
cols
dat
for(i in 1:nFields) { if ((i+1)%%2 == 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
cols <- NULL
dat <- NULL
for(i in 1:nFields) { if ((i+1)%%2 == 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
cols
dat
s = "voltage,volts,current,mA"
tmp <- unlist(strsplit(s,','))
nFields <- length(tmp)
cols <- NULL
dat <- NULL
for(i in 1:nFields) { if ((i+1)%%2 == 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
cols <- NULL
dat <- NULL
for(i in 1:nFields) { if ((i+2)%%2 != 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
cols
dat
s = "voltage,volts,current,mA"
tmp <- unlist(strsplit(s,','))
cols <- NULL
dat <- NULL
for(i in 1:nFields) { if ((i+2)%%2 != 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
units <- vector("list", length(cols))
units
names(units) <- cols
units
units[cols[1]] <- toString(dat[1])
units[cols[2]] <- toString(dat[2])
units
s = "voltage,volts,current,mA"
tmp <- unlist(strsplit(s,','))
cols <- NULL
dat <- NULL
for(i in 1:nFields) { if ((i+2)%%2 != 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
units <- vector("list", length(cols))
names(units) <- cols
for(i in 1:length(cols) { units[i] <- toString(dat[i])}
for(i in 1:length(cols)) { units[i] <- toString(dat[i])}
units
s = "voltage,volts,current,mA"
tmp <- unlist(strsplit(s,','))
cols <- NULL
dat <- NULL
for(i in 1:nFields) { if ((i+2)%%2 != 0) {cols <- c(cols, tmp[i])} else {dat <- c(dat, tmp[i])}}
units <- vector("list", length(cols))
names(units) <- cols
for(i in 1:length(cols)) { units[i] <- toString(dat[i])}
units
test <- "words"
tmp <- unlist(strsplit(s,','))
tmp
tmp <- unlist(strsplit(test,','))
tmp
length(tmp)
tmp <- unlist(strsplit(s,','))
length(tmp)
typeof(tmp)
shiny::runApp('edsa/edsa_app/visualize_data')
shiny::runApp()
shiny::runApp()
shiny::runApp()
ds()$dt
shiny::runApp()
shiny::runApp()
x <- '0.000001'
x
as.numeric(x)
x <- '1e-06'
as.numeric(x)
x
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x <- "hi"
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/edsa/edsa_app/select_project')
shiny::runApp('~/edsa/edsa_app/select_project')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/edsa/edsa_app/select_project')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/edsa/edsa_app/visualize_xy')
shiny::runApp('~/edsa/edsa_app/visualize_xy')
shiny::runApp('~/edsa/edsa_app/visualize_xy')
shiny::runApp('~/edsa/edsa_app/visualize_xy')
